<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jijian.demo.dao.CareerMapper">
  <resultMap id="BaseResultMap" type="jijian.demo.domain.Career">
    <id column="pk_id" jdbcType="BIGINT" property="pkId" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="attack" jdbcType="INTEGER" property="attack" />
    <result column="defend" jdbcType="INTEGER" property="defend" />
    <result column="counterattack" jdbcType="INTEGER" property="counterattack" />
    <result column="victory" jdbcType="INTEGER" property="victory" />
    <result column="total" jdbcType="INTEGER" property="total" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pk_id, open_id, attack, defend, counterattack, victory, total, gmt_create, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="jijian.demo.domain.CareerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from career
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from career
    where pk_id = #{pkId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from career
    where pk_id = #{pkId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="jijian.demo.domain.CareerExample">
    delete from career
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jijian.demo.domain.Career">
    insert into career (pk_id, open_id, attack, 
      defend, counterattack, victory, 
      total, gmt_create, gmt_modified
      )
    values (#{pkId,jdbcType=BIGINT}, #{openId,jdbcType=VARCHAR}, #{attack,jdbcType=INTEGER}, 
      #{defend,jdbcType=INTEGER}, #{counterattack,jdbcType=INTEGER}, #{victory,jdbcType=INTEGER}, 
      #{total,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="jijian.demo.domain.Career">
    insert into career
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pkId != null">
        pk_id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="attack != null">
        attack,
      </if>
      <if test="defend != null">
        defend,
      </if>
      <if test="counterattack != null">
        counterattack,
      </if>
      <if test="victory != null">
        victory,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pkId != null">
        #{pkId,jdbcType=BIGINT},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="attack != null">
        #{attack,jdbcType=INTEGER},
      </if>
      <if test="defend != null">
        #{defend,jdbcType=INTEGER},
      </if>
      <if test="counterattack != null">
        #{counterattack,jdbcType=INTEGER},
      </if>
      <if test="victory != null">
        #{victory,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        #{total,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="jijian.demo.domain.CareerExample" resultType="java.lang.Long">
    select count(*) from career
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update career
    <set>
      <if test="record.pkId != null">
        pk_id = #{record.pkId,jdbcType=BIGINT},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.attack != null">
        attack = #{record.attack,jdbcType=INTEGER},
      </if>
      <if test="record.defend != null">
        defend = #{record.defend,jdbcType=INTEGER},
      </if>
      <if test="record.counterattack != null">
        counterattack = #{record.counterattack,jdbcType=INTEGER},
      </if>
      <if test="record.victory != null">
        victory = #{record.victory,jdbcType=INTEGER},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update career
    set pk_id = #{record.pkId,jdbcType=BIGINT},
      open_id = #{record.openId,jdbcType=VARCHAR},
      attack = #{record.attack,jdbcType=INTEGER},
      defend = #{record.defend,jdbcType=INTEGER},
      counterattack = #{record.counterattack,jdbcType=INTEGER},
      victory = #{record.victory,jdbcType=INTEGER},
      total = #{record.total,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="jijian.demo.domain.Career">
    update career
    <set>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="attack != null">
        attack = #{attack,jdbcType=INTEGER},
      </if>
      <if test="defend != null">
        defend = #{defend,jdbcType=INTEGER},
      </if>
      <if test="counterattack != null">
        counterattack = #{counterattack,jdbcType=INTEGER},
      </if>
      <if test="victory != null">
        victory = #{victory,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where pk_id = #{pkId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="jijian.demo.domain.Career">
    update career
    set open_id = #{openId,jdbcType=VARCHAR},
      attack = #{attack,jdbcType=INTEGER},
      defend = #{defend,jdbcType=INTEGER},
      counterattack = #{counterattack,jdbcType=INTEGER},
      victory = #{victory,jdbcType=INTEGER},
      total = #{total,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where pk_id = #{pkId,jdbcType=BIGINT}
  </update>
</mapper>